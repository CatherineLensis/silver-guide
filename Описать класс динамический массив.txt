Описать класс «динамический массив целых чисел». В классе реализовать 
конструктор по умолчанию, деструктор, метод добавления элемента в массив,
метод получения количества элементов в массиве, операцию индексирования 
(параметр операции – целочисленный индекс элемента, возвращаемое значение –
ссылка на элемент массива, соответствующий индексу). Перегрузить операцию
вывода массива в стандартный поток ostream
Ниже представлена реализация класса "динамический массив целых чисел" в соответствии с описанными требованиями:

```cpp
#include <iostream>

class DynamicIntArray {
private:
    int* data;     // Указатель на динамический массив
    int size;      // Размер массива

public:
    // Конструктор по умолчанию
    DynamicIntArray() : data(nullptr), size(0) {}

    // Деструктор
    ~DynamicIntArray() {
        delete[] data;
    }

    // Метод добавления элемента в массив
    void addElement(int element) {
        int* newData = new int[size + 1];    // Создаем новый массив большего размера

        // Копируем существующие элементы в новый массив
        for (int i = 0; i < size; i++) {
            newData[i] = data[i];
        }

        newData[size] = element;    // Добавляем новый элемент в конец массива

        delete[] data;              // Освобождаем память, занимаемую старым массивом
        data = newData;             // Обновляем указатель на новый массив
        size++;                     // Увеличиваем размер массива
    }

    // Метод получения количества элементов в массиве
    int getSize() const {
        return size;
    }

    // Перегрузка операции индексирования
    int& operator[](int index) {
        if (index < 0 || index >= size) {
            throw std::out_of_range("Index out of range");
        }
        return data[index];
    }

    // Перегрузка операции вывода в стандартный поток ostream
    friend std::ostream& operator<<(std::ostream& os, const DynamicIntArray& array) {
        for (int i = 0; i < array.size; i++) {
            os << array.data[i] << " ";
        }
        return os;
    }
};

int main() {
    DynamicIntArray arr;

    // Добавление элементов в массив
    arr.addElement(10);
    arr.addElement(20);
    arr.addElement(30);

    // Вывод размера массива
    std::cout << "Размер массива: " << arr.getSize() << std::endl;

    // Вывод элементов массива
    std::cout << "Массив: " << arr << std::endl;

    // Изменение элемента массива
    arr[1] = 25;

    // Вывод измененного массива
    std::cout << "Измененный массив: " << arr << std::endl;

    return 0;
}
```

В данной реализации класса "DynamicIntArray" мы имеем приватные члены данных `data` (указатель на динамический массив) и `size` (размер массива).

Публичные методы класса включают конструктор по умолчанию, деструктор, метод `addElement` для добавления элемента в массив, метод `getSize` для получения количества элементов в массиве, и перегрузку оператора `[]` для индексирования элементов массива.

Конструктор по умолчанию ини

циализирует указатель `data` значением `nullptr` и размер `size` значением 0.

Деструктор освобождает память, занимаемую динамическим массивом, при уничтожении объекта.

Метод `addElement` создает новый массив большего размера, копирует существующие элементы в новый массив, добавляет новый элемент в конец массива, освобождает память, занимаемую старым массивом, и обновляет указатель `data` и размер `size`.

Метод `getSize` возвращает текущий размер массива.

Оператор `[]` перегружен для индексирования элементов массива. Если индекс находится в пределах допустимого диапазона (от 0 до `size-1`), метод возвращает ссылку на элемент массива с указанным индексом. Если индекс выходит за пределы допустимого диапазона, выбрасывается исключение `std::out_of_range`.

Также в классе определена дружественная функция `operator<<`, которая перегружает операцию вывода `<<` для класса `DynamicIntArray`. Она позволяет выводить элементы массива в стандартный поток `ostream`.

В функции `main` создается объект `arr` класса `DynamicIntArray`. Затем в него добавляются элементы, выводится размер массива, выводятся элементы массива, изменяется элемент массива, и выводится измененный массив.
